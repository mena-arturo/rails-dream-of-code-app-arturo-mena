---------------------------------- Question 1 ------------------------------------------------------

Finish Task 1: Collect emails for students in the current Intro course

During the lesson, we collected upcoming courses data. Now we need a list of emails for students currently enrolled in Intro to Programming:

On the enrollments tab, we see that an enrollment has columns student_id and course_id.
Find any two students enrolled in the Intro to Programming - Spring 2025 course and fill in the following template for each matching student row:
<student id>, <student email>

1, nick@harber.example
2, beryl_roberts@dickinson.test
3, edmund.von@armstrong.example
4, logan@doyle-herman.example
5, chong_greenholt@jacobs.test
6, mickey@oberbrunner.example
7, nanci_schuppe@lockman-bins.test
8, cecila@hills.example
9, santo.friesen@volkman-mohr.test
10, darwin.wyman@hermiston.test


Now determine how to find this data using ActiveRecord queries and Ruby.
Copy your commands to the lesson-01-assignment file in your project. You can take as many or few steps as you'd like.

---------------------- Step 1. Get the course id for Intro to Programming

doc-rails(dev)> CodingClass.where(title:'Intro to Programming')

CodingClass Load (1.2ms)  SELECT "coding_classes".* FROM "coding_classes" WHERE "coding_classes"."title" = 'Intro to Programming' /* loading for pp */ LIMIT 11 /*application='DocRails'*/
=> 
[#<CodingClass:0x000074e6fbffc588
  id: 1,
  title: "Intro to Programming",
  description: "Learn the basics of web development, including HTM...",
  created_at: "2025-07-10 19:45:56.234215000 +0000",
  updated_at: "2025-07-10 19:45:56.234215000 +0000">]

---------------------- Step 2. Get all students enrolled in Intro to Programming

doc-rails(dev)> enrolless = Enrollment.where(course_id:1)

Enrollment Load (0.4ms)  SELECT "enrollments".* FROM "enrollments" WHERE "enrollments"."course_id" = 1 /* loading for pp */ LIMIT 11 /*application='DocRails'*/
=> 
[#<Enrollment:0x000074e6fbff7308
...


---------------------- Step 3. For each student get the requested data

doc-rails(dev)* enrolless.each do |enrollee|
doc-rails(dev)*   print enrollee.student.id, ", ", enrollee.student.email, "\n"
doc-rails(dev)> end
  Student Load (0.2ms)  SELECT "students".* FROM "students" WHERE "students"."id" = 1 LIMIT 1 /*application='DocRails'*/
1, nick@harber.example
  Student Load (0.1ms)  SELECT "students".* FROM "students" WHERE "students"."id" = 2 LIMIT 1 /*application='DocRails'*/
2, beryl_roberts@dickinson.test
  Student Load (0.1ms)  SELECT "students".* FROM "students" WHERE "students"."id" = 3 LIMIT 1 /*application='DocRails'*/
3, edmund.von@armstrong.example
  Student Load (0.1ms)  SELECT "students".* FROM "students" WHERE "students"."id" = 4 LIMIT 1 /*application='DocRails'*/
4, logan@doyle-herman.example
  Student Load (0.1ms)  SELECT "students".* FROM "students" WHERE "students"."id" = 5 LIMIT 1 /*application='DocRails'*/
5, chong_greenholt@jacobs.test
  Student Load (0.1ms)  SELECT "students".* FROM "students" WHERE "students"."id" = 6 LIMIT 1 /*application='DocRails'*/
6, mickey@oberbrunner.example
  Student Load (0.1ms)  SELECT "students".* FROM "students" WHERE "students"."id" = 7 LIMIT 1 /*application='DocRails'*/
7, nanci_schuppe@lockman-bins.test
  Student Load (0.1ms)  SELECT "students".* FROM "students" WHERE "students"."id" = 8 LIMIT 1 /*application='DocRails'*/
8, cecila@hills.example
  Student Load (0.1ms)  SELECT "students".* FROM "students" WHERE "students"."id" = 9 LIMIT 1 /*application='DocRails'*/
9, santo.friesen@volkman-mohr.test
  Student Load (0.1ms)  SELECT "students".* FROM "students" WHERE "students"."id" = 10 LIMIT 1 /*application='DocRails'*/
10, darwin.wyman@hermiston.test

---------------------------------- Question 2 ------------------------------------------------------

Task 2: Email all mentors who have not assigned a final grade

Our next task is to email all the mentors for students in the current (Spring 2025) Intro to Programming course who do not yet have a final grade (on the enrollments tab), so that we can remind them to finish grading.

Reference the following sheets: mentor_enrollment_assignments, enrollments, courses, coding_classes, trimesters, mentors,
Find any two mentors who have not assigned a final grade for students in a Spring 2025 course. For each mentor, complete the following template:

<mentor id>, <mentor email>

1, emile@murazik.example 
2, isidro.daniel@harris.test
3, theo.thiel@klocko.example

---------------------- Step 1. Find all students that are enrolled in "Intro to Programming" and have no final_grade

enrolless_without_grades= Enrollment.where({course_id: 1, final_grade: nil})
[#<Enrollment:0x000074e70003e9c0
  id: 3,
  course_id: 1,
  student_id: 3,
  final_grade: nil,
  created_at: "2025-07-10 19:45:58.611674000 +0000",
  updated_at: "2025-07-10 19:45:58.611674000 +0000">,
 #<Enrollment:0x000074e70003e880
  id: 6,
  course_id: 1,
  student_id: 6,
  final_grade: nil,
  created_at: "2025-07-10 19:45:58.642763000 +0000",
  updated_at: "2025-07-10 19:45:58.642763000 +0000">,
 #<Enrollment:0x000074e70003e740
  id: 9,
  course_id: 1,
  student_id: 9,
  final_grade: nil,
  created_at: "2025-07-10 19:45:58.673184000 +0000",
  updated_at: "2025-07-10 19:45:58.673184000 +0000">]


---------------------- Step 2. Get the mentor_id from MentorEnrollmentAssignment for each record without grades and then go to Mentor and get the requested data

doc-rails(dev)* enrolless_without_grades.each do |enrollee|
doc-rails(dev)*   enrollment = MentorEnrollmentAssignment.find_by(id: enrollee.id)
doc-rails(dev)*   mentor= Mentor.find_by(id:enrollment.mentor_id)
doc-rails(dev)*   print mentor.id, ", ", mentor.email
doc-rails(dev)> end

  MentorEnrollmentAssignment Load (1.3ms)  SELECT "mentor_enrollment_assignments".* FROM "mentor_enrollment_assignments" WHERE "mentor_enrollment_assignments"."id" = 3 LIMIT 1 /*application='DocRails'*/
  Mentor Load (0.1ms)  SELECT "mentors".* FROM "mentors" WHERE "mentors"."id" = 1 LIMIT 1 /*application='DocRails'*/
1, emile@murazik.example  MentorEnrollmentAssignment Load (0.1ms)  SELECT "mentor_enrollment_assignments".* FROM "mentor_enrollment_assignments" WHERE "mentor_enrollment_assignments"."id" = 6 LIMIT 1 /*application='DocRails'*/
  Mentor Load (0.1ms)  SELECT "mentors".* FROM "mentors" WHERE "mentors"."id" = 2 LIMIT 1 /*application='DocRails'*/
2, isidro.daniel@harris.test  MentorEnrollmentAssignment Load (0.1ms)  SELECT "mentor_enrollment_assignments".* FROM "mentor_enrollment_assignments" WHERE "mentor_enrollment_assignments"."id" = 9 LIMIT 1 /*application='DocRails'*/
  Mentor Load (0.1ms)  SELECT "mentors".* FROM "mentors" WHERE "mentors"."id" = 3 LIMIT 1 /*application='DocRails'*/
3, theo.thiel@klocko.example